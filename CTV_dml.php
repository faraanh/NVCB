<?php

// Data functions (insert, update, delete, form) for table CTV

// This script and data application were generated by AppGini 23.13
// Download AppGini for free from https://bigprof.com/appgini/download/

function CTV_insert(&$error_message = '') {
	global $Translation;

	// mm: can member insert record?
	$arrPerm = getTablePermissions('CTV');
	if(!$arrPerm['insert']) return false;

	$data = [
		'Sodangky' => Request::val('Sodangky', ''),
		'Ngaydangky' => mysql_datetime(Request::val('Ngaydangky', '')),
		'LoaiCTV' => Request::lookup('LoaiCTV', ''),
		'Bidanh' => Request::val('Bidanh', ''),
		'NgayPLgannhat' => mysql_datetime(Request::val('NgayPLgannhat', '')),
		'NgaydenhanPL' => mysql_datetime(Request::val('NgaydenhanPL', '')),
		'DVSD' => Request::lookup('DVSD', ''),
		'CBSD' => Request::lookup('CBSD', ''),
		'DVLap' => Request::lookup('DVLap', ''),
		'CBLap' => Request::lookup('CBLap', ''),
		'Status' => Request::val('Status', ''),
		'Diaban' => Request::val('Diaban', ''),
		'Doituong' => Request::val('Doituong', ''),
		'Vitri' => Request::val('Vitri', ''),
	];

	if($data['Sodangky'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Sodangky': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}

	// hook: CTV_before_insert
	if(function_exists('CTV_before_insert')) {
		$args = [];
		if(!CTV_before_insert($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$error = '';
	// set empty fields to NULL
	$data = array_map(function($v) { return ($v === '' ? NULL : $v); }, $data);
	insert('CTV', backtick_keys_once($data), $error);
	if($error) {
		$error_message = $error;
		return false;
	}

	$recID = db_insert_id(db_link());

	update_calc_fields('CTV', $recID, calculated_fields()['CTV']);

	// hook: CTV_after_insert
	if(function_exists('CTV_after_insert')) {
		$res = sql("SELECT * FROM `CTV` WHERE `IDCTV`='" . makeSafe($recID, false) . "' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) {
			$data = array_map('makeSafe', $row);
		}
		$data['selectedID'] = makeSafe($recID, false);
		$args = [];
		if(!CTV_after_insert($data, getMemberInfo(), $args)) { return $recID; }
	}

	// mm: save ownership data
	set_record_owner('CTV', $recID, getLoggedMemberID());

	// if this record is a copy of another record, copy children if applicable
	if(strlen(Request::val('SelectedID'))) CTV_copy_children($recID, Request::val('SelectedID'));

	return $recID;
}

function CTV_copy_children($destination_id, $source_id) {
	global $Translation;
	$requests = []; // array of curl handlers for launching insert requests
	$eo = ['silentErrors' => true];
	$safe_sid = makeSafe($source_id);

	// copy BL3
	$res = sql("SELECT * FROM `BL3` WHERE `IDCTV`='{$safe_sid}'", $eo);
	while($row = db_fetch_assoc($res)) {
		$data = [
			'SelectedID' => $row['IDBL3'],
			'IDCTV' => $destination_id,
			'Ngaydauki' => $row['Ngaydauki'],
			'Ngaycuoiki' => $row['Ngaycuoiki'],
			'CBPhanloai' => $row['CBPhanloai'],
			'CHPhanloai' => $row['CHPhanloai'],
			'Phanloai' => $row['Phanloai'],
			'Nx_Dx' => $row['Nx_Dx'],
		];

		$ch = curl_insert_handler('BL3', $data);
		if($ch !== false) $requests[] = $ch;
	}

	// launch requests, asynchronously
	curl_batch($requests);
}

function CTV_delete($selected_id, $AllowDeleteOfParents = false, $skipChecks = false) {
	// insure referential integrity ...
	global $Translation;
	$selected_id = makeSafe($selected_id);

	// mm: can member delete record?
	if(!check_record_permission('CTV', $selected_id, 'delete')) {
		return $Translation['You don\'t have enough permissions to delete this record'];
	}

	// hook: CTV_before_delete
	if(function_exists('CTV_before_delete')) {
		$args = [];
		if(!CTV_before_delete($selected_id, $skipChecks, getMemberInfo(), $args))
			return $Translation['Couldn\'t delete this record'] . (
				!empty($args['error_message']) ?
					'<div class="text-bold">' . strip_tags($args['error_message']) . '</div>'
					: '' 
			);
	}

	// child table: BL3
	$res = sql("SELECT `IDCTV` FROM `CTV` WHERE `IDCTV`='{$selected_id}'", $eo);
	$IDCTV = db_fetch_row($res);
	$rires = sql("SELECT COUNT(1) FROM `BL3` WHERE `IDCTV`='" . makeSafe($IDCTV[0]) . "'", $eo);
	$rirow = db_fetch_row($rires);
	if($rirow[0] && !$AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation["couldn't delete"];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'BL3', $RetMsg);
		return $RetMsg;
	} elseif($rirow[0] && $AllowDeleteOfParents && !$skipChecks) {
		$RetMsg = $Translation['confirm delete'];
		$RetMsg = str_replace('<RelatedRecords>', $rirow[0], $RetMsg);
		$RetMsg = str_replace('<TableName>', 'BL3', $RetMsg);
		$RetMsg = str_replace('<Delete>', '<input type="button" class="btn btn-danger" value="' . html_attr($Translation['yes']) . '" onClick="window.location = \'CTV_view.php?SelectedID=' . urlencode($selected_id) . '&delete_x=1&confirmed=1&csrf_token=' . urlencode(csrf_token(false, true)) . '\';">', $RetMsg);
		$RetMsg = str_replace('<Cancel>', '<input type="button" class="btn btn-success" value="' . html_attr($Translation[ 'no']) . '" onClick="window.location = \'CTV_view.php?SelectedID=' . urlencode($selected_id) . '\';">', $RetMsg);
		return $RetMsg;
	}

	sql("DELETE FROM `CTV` WHERE `IDCTV`='{$selected_id}'", $eo);

	// hook: CTV_after_delete
	if(function_exists('CTV_after_delete')) {
		$args = [];
		CTV_after_delete($selected_id, getMemberInfo(), $args);
	}

	// mm: delete ownership data
	sql("DELETE FROM `membership_userrecords` WHERE `tableName`='CTV' AND `pkValue`='{$selected_id}'", $eo);
}

function CTV_update(&$selected_id, &$error_message = '') {
	global $Translation;

	// mm: can member edit record?
	if(!check_record_permission('CTV', $selected_id, 'edit')) return false;

	$data = [
		'Sodangky' => Request::val('Sodangky', ''),
		'Ngaydangky' => mysql_datetime(Request::val('Ngaydangky', '')),
		'LoaiCTV' => Request::lookup('LoaiCTV', ''),
		'Bidanh' => Request::val('Bidanh', ''),
		'NgayPLgannhat' => mysql_datetime(Request::val('NgayPLgannhat', '')),
		'NgaydenhanPL' => mysql_datetime(Request::val('NgaydenhanPL', '')),
		'DVSD' => Request::lookup('DVSD', ''),
		'CBSD' => Request::lookup('CBSD', ''),
		'DVLap' => Request::lookup('DVLap', ''),
		'CBLap' => Request::lookup('CBLap', ''),
		'Status' => Request::val('Status', ''),
		'Diaban' => Request::val('Diaban', ''),
		'Doituong' => Request::val('Doituong', ''),
		'Vitri' => Request::val('Vitri', ''),
	];

	if($data['Sodangky'] === '') {
		echo StyleSheet() . "\n\n<div class=\"alert alert-danger\">{$Translation['error:']} 'Sodangky': {$Translation['field not null']}<br><br>";
		echo '<a href="" onclick="history.go(-1); return false;">' . $Translation['< back'] . '</a></div>';
		exit;
	}
	// get existing values
	$old_data = getRecord('CTV', $selected_id);
	if(is_array($old_data)) {
		$old_data = array_map('makeSafe', $old_data);
		$old_data['selectedID'] = makeSafe($selected_id);
	}

	$data['selectedID'] = makeSafe($selected_id);

	// hook: CTV_before_update
	if(function_exists('CTV_before_update')) {
		$args = ['old_data' => $old_data];
		if(!CTV_before_update($data, getMemberInfo(), $args)) {
			if(isset($args['error_message'])) $error_message = $args['error_message'];
			return false;
		}
	}

	$set = $data; unset($set['selectedID']);
	foreach ($set as $field => $value) {
		$set[$field] = ($value !== '' && $value !== NULL) ? $value : NULL;
	}

	if(!update(
		'CTV', 
		backtick_keys_once($set), 
		['`IDCTV`' => $selected_id], 
		$error_message
	)) {
		echo $error_message;
		echo '<a href="CTV_view.php?SelectedID=' . urlencode($selected_id) . "\">{$Translation['< back']}</a>";
		exit;
	}


	$eo = ['silentErrors' => true];

	update_calc_fields('CTV', $data['selectedID'], calculated_fields()['CTV']);

	// hook: CTV_after_update
	if(function_exists('CTV_after_update')) {
		$res = sql("SELECT * FROM `CTV` WHERE `IDCTV`='{$data['selectedID']}' LIMIT 1", $eo);
		if($row = db_fetch_assoc($res)) $data = array_map('makeSafe', $row);

		$data['selectedID'] = $data['IDCTV'];
		$args = ['old_data' => $old_data];
		if(!CTV_after_update($data, getMemberInfo(), $args)) return;
	}

	// mm: update ownership data
	sql("UPDATE `membership_userrecords` SET `dateUpdated`='" . time() . "' WHERE `tableName`='CTV' AND `pkValue`='" . makeSafe($selected_id) . "'", $eo);
}

function CTV_form($selected_id = '', $AllowUpdate = 1, $AllowInsert = 1, $AllowDelete = 1, $separateDV = 0, $TemplateDV = '', $TemplateDVP = '') {
	// function to return an editable form for a table records
	// and fill it with data of record whose ID is $selected_id. If $selected_id
	// is empty, an empty form is shown, with only an 'Add New'
	// button displayed.

	global $Translation;
	$eo = ['silentErrors' => true];
	$noUploads = null;
	$row = $urow = $jsReadOnly = $jsEditable = $lookups = null;

	$noSaveAsCopy = false;

	// mm: get table permissions
	$arrPerm = getTablePermissions('CTV');
	if(!$arrPerm['insert'] && $selected_id == '')
		// no insert permission and no record selected
		// so show access denied error unless TVDV
		return $separateDV ? $Translation['tableAccessDenied'] : '';
	$AllowInsert = ($arrPerm['insert'] ? true : false);
	// print preview?
	$dvprint = false;
	if(strlen($selected_id) && Request::val('dvprint_x') != '') {
		$dvprint = true;
	}

	$filterer_LoaiCTV = Request::val('filterer_LoaiCTV');
	$filterer_DVSD = Request::val('filterer_DVSD');
	$filterer_CBSD = Request::val('filterer_CBSD');
	$filterer_DVLap = Request::val('filterer_DVLap');
	$filterer_CBLap = Request::val('filterer_CBLap');

	// populate filterers, starting from children to grand-parents
	if($filterer_CBSD && !$filterer_DVSD) $filterer_DVSD = sqlValue("select Donvi from CanBo where IDCanbo='" . makeSafe($filterer_CBSD) . "'");
	if($filterer_CBLap && !$filterer_DVLap) $filterer_DVLap = sqlValue("select Donvi from CanBo where IDCanbo='" . makeSafe($filterer_CBLap) . "'");

	// unique random identifier
	$rnd1 = ($dvprint ? rand(1000000, 9999999) : '');
	// combobox: LoaiCTV
	$combo_LoaiCTV = new DataCombo;
	// combobox: DVSD
	$combo_DVSD = new DataCombo;
	// combobox: CBSD, filterable by: DVSD
	$combo_CBSD = new DataCombo;
	// combobox: DVLap
	$combo_DVLap = new DataCombo;
	// combobox: CBLap, filterable by: DVLap
	$combo_CBLap = new DataCombo;

	if($selected_id) {
		if(!check_record_permission('CTV', $selected_id, 'view'))
			return $Translation['tableAccessDenied'];

		// can edit?
		$AllowUpdate = check_record_permission('CTV', $selected_id, 'edit');

		// can delete?
		$AllowDelete = check_record_permission('CTV', $selected_id, 'delete');

		$res = sql("SELECT * FROM `CTV` WHERE `IDCTV`='" . makeSafe($selected_id) . "'", $eo);
		if(!($row = db_fetch_array($res))) {
			return error_message($Translation['No records found'], 'CTV_view.php', false);
		}
		$combo_LoaiCTV->SelectedData = $row['LoaiCTV'];
		$combo_DVSD->SelectedData = $row['DVSD'];
		$combo_CBSD->SelectedData = $row['CBSD'];
		$combo_DVLap->SelectedData = $row['DVLap'];
		$combo_CBLap->SelectedData = $row['CBLap'];
		$urow = $row; /* unsanitized data */
		$row = array_map('safe_html', $row);
	} else {
		$filterField = Request::val('FilterField');
		$filterOperator = Request::val('FilterOperator');
		$filterValue = Request::val('FilterValue');
		$combo_LoaiCTV->SelectedData = $filterer_LoaiCTV;
		$combo_DVSD->SelectedData = $filterer_DVSD;
		$combo_CBSD->SelectedData = $filterer_CBSD;
		$combo_DVLap->SelectedData = $filterer_DVLap;
		$combo_CBLap->SelectedData = $filterer_CBLap;
	}
	$combo_LoaiCTV->HTML = '<span id="LoaiCTV-container' . $rnd1 . '"></span><input type="hidden" name="LoaiCTV" id="LoaiCTV' . $rnd1 . '" value="' . html_attr($combo_LoaiCTV->SelectedData) . '">';
	$combo_LoaiCTV->MatchText = '<span id="LoaiCTV-container-readonly' . $rnd1 . '"></span><input type="hidden" name="LoaiCTV" id="LoaiCTV' . $rnd1 . '" value="' . html_attr($combo_LoaiCTV->SelectedData) . '">';
	$combo_DVSD->HTML = '<span id="DVSD-container' . $rnd1 . '"></span><input type="hidden" name="DVSD" id="DVSD' . $rnd1 . '" value="' . html_attr($combo_DVSD->SelectedData) . '">';
	$combo_DVSD->MatchText = '<span id="DVSD-container-readonly' . $rnd1 . '"></span><input type="hidden" name="DVSD" id="DVSD' . $rnd1 . '" value="' . html_attr($combo_DVSD->SelectedData) . '">';
	$combo_CBSD->HTML = '<span id="CBSD-container' . $rnd1 . '"></span><input type="hidden" name="CBSD" id="CBSD' . $rnd1 . '" value="' . html_attr($combo_CBSD->SelectedData) . '">';
	$combo_CBSD->MatchText = '<span id="CBSD-container-readonly' . $rnd1 . '"></span><input type="hidden" name="CBSD" id="CBSD' . $rnd1 . '" value="' . html_attr($combo_CBSD->SelectedData) . '">';
	$combo_DVLap->HTML = '<span id="DVLap-container' . $rnd1 . '"></span><input type="hidden" name="DVLap" id="DVLap' . $rnd1 . '" value="' . html_attr($combo_DVLap->SelectedData) . '">';
	$combo_DVLap->MatchText = '<span id="DVLap-container-readonly' . $rnd1 . '"></span><input type="hidden" name="DVLap" id="DVLap' . $rnd1 . '" value="' . html_attr($combo_DVLap->SelectedData) . '">';
	$combo_CBLap->HTML = '<span id="CBLap-container' . $rnd1 . '"></span><input type="hidden" name="CBLap" id="CBLap' . $rnd1 . '" value="' . html_attr($combo_CBLap->SelectedData) . '">';
	$combo_CBLap->MatchText = '<span id="CBLap-container-readonly' . $rnd1 . '"></span><input type="hidden" name="CBLap" id="CBLap' . $rnd1 . '" value="' . html_attr($combo_CBLap->SelectedData) . '">';

	ob_start();
	?>

	<script>
		// initial lookup values
		AppGini.current_LoaiCTV__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['LoaiCTV'] : htmlspecialchars($filterer_LoaiCTV, ENT_QUOTES)); ?>"};
		AppGini.current_DVSD__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['DVSD'] : htmlspecialchars($filterer_DVSD, ENT_QUOTES)); ?>"};
		AppGini.current_CBSD__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['CBSD'] : htmlspecialchars($filterer_CBSD, ENT_QUOTES)); ?>"};
		AppGini.current_DVLap__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['DVLap'] : htmlspecialchars($filterer_DVLap, ENT_QUOTES)); ?>"};
		AppGini.current_CBLap__RAND__ = { text: "", value: "<?php echo addslashes($selected_id ? $urow['CBLap'] : htmlspecialchars($filterer_CBLap, ENT_QUOTES)); ?>"};

		jQuery(function() {
			setTimeout(function() {
				if(typeof(LoaiCTV_reload__RAND__) == 'function') LoaiCTV_reload__RAND__();
				if(typeof(DVSD_reload__RAND__) == 'function') DVSD_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(CBSD_reload__RAND__) == \'function\') CBSD_reload__RAND__(AppGini.current_DVSD__RAND__.value);' : ''); ?>
				if(typeof(DVLap_reload__RAND__) == 'function') DVLap_reload__RAND__();
				<?php echo (!$AllowUpdate || $dvprint ? 'if(typeof(CBLap_reload__RAND__) == \'function\') CBLap_reload__RAND__(AppGini.current_DVLap__RAND__.value);' : ''); ?>
			}, 50); /* we need to slightly delay client-side execution of the above code to allow AppGini.ajaxCache to work */
		});
		function LoaiCTV_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#LoaiCTV-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_LoaiCTV__RAND__.value, t: 'CTV', f: 'LoaiCTV' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="LoaiCTV"]').val(resp.results[0].id);
							$j('[id=LoaiCTV-container-readonly__RAND__]').html('<span class="match-text" id="LoaiCTV-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=LoaiCTV_view_parent]').hide(); } else { $j('.btn[id=LoaiCTV_view_parent]').show(); }


							if(typeof(LoaiCTV_update_autofills__RAND__) == 'function') LoaiCTV_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'CTV', f: 'LoaiCTV' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_LoaiCTV__RAND__.value = e.added.id;
				AppGini.current_LoaiCTV__RAND__.text = e.added.text;
				$j('[name="LoaiCTV"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=LoaiCTV_view_parent]').hide(); } else { $j('.btn[id=LoaiCTV_view_parent]').show(); }


				if(typeof(LoaiCTV_update_autofills__RAND__) == 'function') LoaiCTV_update_autofills__RAND__();
			});

			if(!$j("#LoaiCTV-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_LoaiCTV__RAND__.value, t: 'CTV', f: 'LoaiCTV' },
					success: function(resp) {
						$j('[name="LoaiCTV"]').val(resp.results[0].id);
						$j('[id=LoaiCTV-container-readonly__RAND__]').html('<span class="match-text" id="LoaiCTV-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=LoaiCTV_view_parent]').hide(); } else { $j('.btn[id=LoaiCTV_view_parent]').show(); }

						if(typeof(LoaiCTV_update_autofills__RAND__) == 'function') LoaiCTV_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_LoaiCTV__RAND__.value, t: 'CTV', f: 'LoaiCTV' },
				success: function(resp) {
					$j('[id=LoaiCTV-container__RAND__], [id=LoaiCTV-container-readonly__RAND__]').html('<span class="match-text" id="LoaiCTV-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=LoaiCTV_view_parent]').hide(); } else { $j('.btn[id=LoaiCTV_view_parent]').show(); }

					if(typeof(LoaiCTV_update_autofills__RAND__) == 'function') LoaiCTV_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function DVSD_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#DVSD-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_DVSD__RAND__.value, t: 'CTV', f: 'DVSD' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="DVSD"]').val(resp.results[0].id);
							$j('[id=DVSD-container-readonly__RAND__]').html('<span class="match-text" id="DVSD-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=DONVI_view_parent]').hide(); } else { $j('.btn[id=DONVI_view_parent]').show(); }

						if(typeof(CBSD_reload__RAND__) == 'function') CBSD_reload__RAND__(AppGini.current_DVSD__RAND__.value);

							if(typeof(DVSD_update_autofills__RAND__) == 'function') DVSD_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'CTV', f: 'DVSD' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_DVSD__RAND__.value = e.added.id;
				AppGini.current_DVSD__RAND__.text = e.added.text;
				$j('[name="DVSD"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=DONVI_view_parent]').hide(); } else { $j('.btn[id=DONVI_view_parent]').show(); }

						if(typeof(CBSD_reload__RAND__) == 'function') CBSD_reload__RAND__(AppGini.current_DVSD__RAND__.value);

				if(typeof(DVSD_update_autofills__RAND__) == 'function') DVSD_update_autofills__RAND__();
			});

			if(!$j("#DVSD-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_DVSD__RAND__.value, t: 'CTV', f: 'DVSD' },
					success: function(resp) {
						$j('[name="DVSD"]').val(resp.results[0].id);
						$j('[id=DVSD-container-readonly__RAND__]').html('<span class="match-text" id="DVSD-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=DONVI_view_parent]').hide(); } else { $j('.btn[id=DONVI_view_parent]').show(); }

						if(typeof(DVSD_update_autofills__RAND__) == 'function') DVSD_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_DVSD__RAND__.value, t: 'CTV', f: 'DVSD' },
				success: function(resp) {
					$j('[id=DVSD-container__RAND__], [id=DVSD-container-readonly__RAND__]').html('<span class="match-text" id="DVSD-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=DONVI_view_parent]').hide(); } else { $j('.btn[id=DONVI_view_parent]').show(); }

					if(typeof(DVSD_update_autofills__RAND__) == 'function') DVSD_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function CBSD_reload__RAND__(filterer_DVSD) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#CBSD-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_DVSD: filterer_DVSD, id: AppGini.current_CBSD__RAND__.value, t: 'CTV', f: 'CBSD' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="CBSD"]').val(resp.results[0].id);
							$j('[id=CBSD-container-readonly__RAND__]').html('<span class="match-text" id="CBSD-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CanBo_view_parent]').hide(); } else { $j('.btn[id=CanBo_view_parent]').show(); }


							if(typeof(CBSD_update_autofills__RAND__) == 'function') CBSD_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_DVSD: filterer_DVSD, s: term, p: page, t: 'CTV', f: 'CBSD' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_CBSD__RAND__.value = e.added.id;
				AppGini.current_CBSD__RAND__.text = e.added.text;
				$j('[name="CBSD"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CanBo_view_parent]').hide(); } else { $j('.btn[id=CanBo_view_parent]').show(); }


				if(typeof(CBSD_update_autofills__RAND__) == 'function') CBSD_update_autofills__RAND__();
			});

			if(!$j("#CBSD-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_CBSD__RAND__.value, t: 'CTV', f: 'CBSD' },
					success: function(resp) {
						$j('[name="CBSD"]').val(resp.results[0].id);
						$j('[id=CBSD-container-readonly__RAND__]').html('<span class="match-text" id="CBSD-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CanBo_view_parent]').hide(); } else { $j('.btn[id=CanBo_view_parent]').show(); }

						if(typeof(CBSD_update_autofills__RAND__) == 'function') CBSD_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_CBSD__RAND__.value, t: 'CTV', f: 'CBSD' },
				success: function(resp) {
					$j('[id=CBSD-container__RAND__], [id=CBSD-container-readonly__RAND__]').html('<span class="match-text" id="CBSD-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CanBo_view_parent]').hide(); } else { $j('.btn[id=CanBo_view_parent]').show(); }

					if(typeof(CBSD_update_autofills__RAND__) == 'function') CBSD_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function DVLap_reload__RAND__() {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#DVLap-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { id: AppGini.current_DVLap__RAND__.value, t: 'CTV', f: 'DVLap' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="DVLap"]').val(resp.results[0].id);
							$j('[id=DVLap-container-readonly__RAND__]').html('<span class="match-text" id="DVLap-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=DONVI_view_parent]').hide(); } else { $j('.btn[id=DONVI_view_parent]').show(); }

						if(typeof(CBLap_reload__RAND__) == 'function') CBLap_reload__RAND__(AppGini.current_DVLap__RAND__.value);

							if(typeof(DVLap_update_autofills__RAND__) == 'function') DVLap_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { s: term, p: page, t: 'CTV', f: 'DVLap' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_DVLap__RAND__.value = e.added.id;
				AppGini.current_DVLap__RAND__.text = e.added.text;
				$j('[name="DVLap"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=DONVI_view_parent]').hide(); } else { $j('.btn[id=DONVI_view_parent]').show(); }

						if(typeof(CBLap_reload__RAND__) == 'function') CBLap_reload__RAND__(AppGini.current_DVLap__RAND__.value);

				if(typeof(DVLap_update_autofills__RAND__) == 'function') DVLap_update_autofills__RAND__();
			});

			if(!$j("#DVLap-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_DVLap__RAND__.value, t: 'CTV', f: 'DVLap' },
					success: function(resp) {
						$j('[name="DVLap"]').val(resp.results[0].id);
						$j('[id=DVLap-container-readonly__RAND__]').html('<span class="match-text" id="DVLap-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=DONVI_view_parent]').hide(); } else { $j('.btn[id=DONVI_view_parent]').show(); }

						if(typeof(DVLap_update_autofills__RAND__) == 'function') DVLap_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_DVLap__RAND__.value, t: 'CTV', f: 'DVLap' },
				success: function(resp) {
					$j('[id=DVLap-container__RAND__], [id=DVLap-container-readonly__RAND__]').html('<span class="match-text" id="DVLap-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=DONVI_view_parent]').hide(); } else { $j('.btn[id=DONVI_view_parent]').show(); }

					if(typeof(DVLap_update_autofills__RAND__) == 'function') DVLap_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
		function CBLap_reload__RAND__(filterer_DVLap) {
		<?php if(($AllowUpdate || $AllowInsert) && !$dvprint) { ?>

			$j("#CBLap-container__RAND__").select2({
				/* initial default value */
				initSelection: function(e, c) {
					$j.ajax({
						url: 'ajax_combo.php',
						dataType: 'json',
						data: { filterer_DVLap: filterer_DVLap, id: AppGini.current_CBLap__RAND__.value, t: 'CTV', f: 'CBLap' },
						success: function(resp) {
							c({
								id: resp.results[0].id,
								text: resp.results[0].text
							});
							$j('[name="CBLap"]').val(resp.results[0].id);
							$j('[id=CBLap-container-readonly__RAND__]').html('<span class="match-text" id="CBLap-match-text">' + resp.results[0].text + '</span>');
							if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CanBo_view_parent]').hide(); } else { $j('.btn[id=CanBo_view_parent]').show(); }


							if(typeof(CBLap_update_autofills__RAND__) == 'function') CBLap_update_autofills__RAND__();
						}
					});
				},
				width: '100%',
				formatNoMatches: function(term) { return '<?php echo addslashes($Translation['No matches found!']); ?>'; },
				minimumResultsForSearch: 5,
				loadMorePadding: 200,
				ajax: {
					url: 'ajax_combo.php',
					dataType: 'json',
					cache: true,
					data: function(term, page) { return { filterer_DVLap: filterer_DVLap, s: term, p: page, t: 'CTV', f: 'CBLap' }; },
					results: function(resp, page) { return resp; }
				},
				escapeMarkup: function(str) { return str; }
			}).on('change', function(e) {
				AppGini.current_CBLap__RAND__.value = e.added.id;
				AppGini.current_CBLap__RAND__.text = e.added.text;
				$j('[name="CBLap"]').val(e.added.id);
				if(e.added.id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CanBo_view_parent]').hide(); } else { $j('.btn[id=CanBo_view_parent]').show(); }


				if(typeof(CBLap_update_autofills__RAND__) == 'function') CBLap_update_autofills__RAND__();
			});

			if(!$j("#CBLap-container__RAND__").length) {
				$j.ajax({
					url: 'ajax_combo.php',
					dataType: 'json',
					data: { id: AppGini.current_CBLap__RAND__.value, t: 'CTV', f: 'CBLap' },
					success: function(resp) {
						$j('[name="CBLap"]').val(resp.results[0].id);
						$j('[id=CBLap-container-readonly__RAND__]').html('<span class="match-text" id="CBLap-match-text">' + resp.results[0].text + '</span>');
						if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CanBo_view_parent]').hide(); } else { $j('.btn[id=CanBo_view_parent]').show(); }

						if(typeof(CBLap_update_autofills__RAND__) == 'function') CBLap_update_autofills__RAND__();
					}
				});
			}

		<?php } else { ?>

			$j.ajax({
				url: 'ajax_combo.php',
				dataType: 'json',
				data: { id: AppGini.current_CBLap__RAND__.value, t: 'CTV', f: 'CBLap' },
				success: function(resp) {
					$j('[id=CBLap-container__RAND__], [id=CBLap-container-readonly__RAND__]').html('<span class="match-text" id="CBLap-match-text">' + resp.results[0].text + '</span>');
					if(resp.results[0].id == '<?php echo empty_lookup_value; ?>') { $j('.btn[id=CanBo_view_parent]').hide(); } else { $j('.btn[id=CanBo_view_parent]').show(); }

					if(typeof(CBLap_update_autofills__RAND__) == 'function') CBLap_update_autofills__RAND__();
				}
			});
		<?php } ?>

		}
	</script>
	<?php

	$lookups = str_replace('__RAND__', $rnd1, ob_get_clean());


	// code for template based detail view forms

	// open the detail view template
	if($dvprint) {
		$template_file = is_file("./{$TemplateDVP}") ? "./{$TemplateDVP}" : './templates/CTV_templateDVP.html';
		$templateCode = @file_get_contents($template_file);
	} else {
		$template_file = is_file("./{$TemplateDV}") ? "./{$TemplateDV}" : './templates/CTV_templateDV.html';
		$templateCode = @file_get_contents($template_file);
	}

	// process form title
	$templateCode = str_replace('<%%DETAIL_VIEW_TITLE%%>', 'CTV details', $templateCode);
	$templateCode = str_replace('<%%RND1%%>', $rnd1, $templateCode);
	$templateCode = str_replace('<%%EMBEDDED%%>', (Request::val('Embedded') ? 'Embedded=1' : ''), $templateCode);
	// process buttons
	if($AllowInsert) {
		if(!$selected_id) $templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-success" id="insert" name="insert_x" value="1" onclick="return CTV_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save New'] . '</button>', $templateCode);
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="insert" name="insert_x" value="1" onclick="return CTV_validateData();"><i class="glyphicon glyphicon-plus-sign"></i> ' . $Translation['Save As Copy'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%INSERT_BUTTON%%>', '', $templateCode);
	}

	// 'Back' button action
	if(Request::val('Embedded')) {
		$backAction = 'AppGini.closeParentModal(); return false;';
	} else {
		$backAction = '$j(\'form\').eq(0).attr(\'novalidate\', \'novalidate\'); document.myform.reset(); return true;';
	}

	if($selected_id) {
		if(!Request::val('Embedded')) $templateCode = str_replace('<%%DVPRINT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="dvprint" name="dvprint_x" value="1" onclick="$j(\'form\').eq(0).prop(\'novalidate\', true); document.myform.reset(); return true;" title="' . html_attr($Translation['Print Preview']) . '"><i class="glyphicon glyphicon-print"></i> ' . $Translation['Print Preview'] . '</button>', $templateCode);
		if($AllowUpdate)
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '<button type="submit" class="btn btn-success btn-lg" id="update" name="update_x" value="1" onclick="return CTV_validateData();" title="' . html_attr($Translation['Save Changes']) . '"><i class="glyphicon glyphicon-ok"></i> ' . $Translation['Save Changes'] . '</button>', $templateCode);
		else
			$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);

		if($AllowDelete)
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '<button type="submit" class="btn btn-danger" id="delete" name="delete_x" value="1" title="' . html_attr($Translation['Delete']) . '"><i class="glyphicon glyphicon-trash"></i> ' . $Translation['Delete'] . '</button>', $templateCode);
		else
			$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '<button type="submit" class="btn btn-default" id="deselect" name="deselect_x" value="1" onclick="' . $backAction . '" title="' . html_attr($Translation['Back']) . '"><i class="glyphicon glyphicon-chevron-left"></i> ' . $Translation['Back'] . '</button>', $templateCode);
	} else {
		$templateCode = str_replace('<%%UPDATE_BUTTON%%>', '', $templateCode);
		$templateCode = str_replace('<%%DELETE_BUTTON%%>', '', $templateCode);

		// if not in embedded mode and user has insert only but no view/update/delete,
		// remove 'back' button
		if(
			$arrPerm['insert']
			&& !$arrPerm['update'] && !$arrPerm['delete'] && !$arrPerm['view']
			&& !Request::val('Embedded')
		)
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
		elseif($separateDV)
			$templateCode = str_replace(
				'<%%DESELECT_BUTTON%%>', 
				'<button
					type="submit" 
					class="btn btn-default" 
					id="deselect" 
					name="deselect_x" 
					value="1" 
					onclick="' . $backAction . '" 
					title="' . html_attr($Translation['Back']) . '">
						<i class="glyphicon glyphicon-chevron-left"></i> ' .
						$Translation['Back'] .
				'</button>',
				$templateCode
			);
		else
			$templateCode = str_replace('<%%DESELECT_BUTTON%%>', '', $templateCode);
	}

	// set records to read only if user can't insert new records and can't edit current record
	if(($selected_id && !$AllowUpdate && !$AllowInsert) || (!$selected_id && !$AllowInsert)) {
		$jsReadOnly = '';
		$jsReadOnly .= "\tjQuery('#Sodangky').replaceWith('<div class=\"form-control-static\" id=\"Sodangky\">' + (jQuery('#Sodangky').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Ngaydangky').parents('.input-group').replaceWith('<div class=\"form-control-static\" id=\"Ngaydangky\">' + (jQuery('#Ngaydangky').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#LoaiCTV').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#LoaiCTV_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#Bidanh').replaceWith('<div class=\"form-control-static\" id=\"Bidanh\">' + (jQuery('#Bidanh').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#NgayPLgannhat').parents('.input-group').replaceWith('<div class=\"form-control-static\" id=\"NgayPLgannhat\">' + (jQuery('#NgayPLgannhat').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#NgaydenhanPL').parents('.input-group').replaceWith('<div class=\"form-control-static\" id=\"NgaydenhanPL\">' + (jQuery('#NgaydenhanPL').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#DVSD').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#DVSD_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#CBSD').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#CBSD_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#DVLap').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#DVLap_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#CBLap').prop('disabled', true).css({ color: '#555', backgroundColor: '#fff' });\n";
		$jsReadOnly .= "\tjQuery('#CBLap_caption').prop('disabled', true).css({ color: '#555', backgroundColor: 'white' });\n";
		$jsReadOnly .= "\tjQuery('#Status').replaceWith('<div class=\"form-control-static\" id=\"Status\">' + (jQuery('#Status').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Diaban').replaceWith('<div class=\"form-control-static\" id=\"Diaban\">' + (jQuery('#Diaban').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Doituong').replaceWith('<div class=\"form-control-static\" id=\"Doituong\">' + (jQuery('#Doituong').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('#Vitri').replaceWith('<div class=\"form-control-static\" id=\"Vitri\">' + (jQuery('#Vitri').val() || '') + '</div>');\n";
		$jsReadOnly .= "\tjQuery('.select2-container').hide();\n";

		$noUploads = true;
	} elseif($AllowInsert) {
		$jsEditable = "\tjQuery('form').eq(0).data('already_changed', true);"; // temporarily disable form change handler
		$locale = isset($Translation['datetimepicker locale']) ? ", locale: '{$Translation['datetimepicker locale']}'" : '';
		$jsEditable .= "\tjQuery('#Ngaydangky').addClass('always_shown').parents('.input-group').datetimepicker({ toolbarPlacement: 'top', sideBySide: true, showClear: true, showTodayButton: true, showClose: true, icons: { close: 'glyphicon glyphicon-ok' }, format: AppGini.datetimeFormat('dt') {$locale} });";
		$locale = isset($Translation['datetimepicker locale']) ? ", locale: '{$Translation['datetimepicker locale']}'" : '';
		$jsEditable .= "\tjQuery('#NgayPLgannhat').addClass('always_shown').parents('.input-group').datetimepicker({ toolbarPlacement: 'top', sideBySide: true, showClear: true, showTodayButton: true, showClose: true, icons: { close: 'glyphicon glyphicon-ok' }, format: AppGini.datetimeFormat('dt') {$locale} });";
		$locale = isset($Translation['datetimepicker locale']) ? ", locale: '{$Translation['datetimepicker locale']}'" : '';
		$jsEditable .= "\tjQuery('#NgaydenhanPL').addClass('always_shown').parents('.input-group').datetimepicker({ toolbarPlacement: 'top', sideBySide: true, showClear: true, showTodayButton: true, showClose: true, icons: { close: 'glyphicon glyphicon-ok' }, format: AppGini.datetimeFormat('dt') {$locale} });";
		$jsEditable .= "\tjQuery('form').eq(0).data('already_changed', false);"; // re-enable form change handler
	}

	// process combos
	$templateCode = str_replace('<%%COMBO(LoaiCTV)%%>', $combo_LoaiCTV->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(LoaiCTV)%%>', $combo_LoaiCTV->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(LoaiCTV)%%>', urlencode($combo_LoaiCTV->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(DVSD)%%>', $combo_DVSD->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(DVSD)%%>', $combo_DVSD->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(DVSD)%%>', urlencode($combo_DVSD->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(CBSD)%%>', $combo_CBSD->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(CBSD)%%>', $combo_CBSD->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(CBSD)%%>', urlencode($combo_CBSD->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(DVLap)%%>', $combo_DVLap->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(DVLap)%%>', $combo_DVLap->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(DVLap)%%>', urlencode($combo_DVLap->MatchText), $templateCode);
	$templateCode = str_replace('<%%COMBO(CBLap)%%>', $combo_CBLap->HTML, $templateCode);
	$templateCode = str_replace('<%%COMBOTEXT(CBLap)%%>', $combo_CBLap->MatchText, $templateCode);
	$templateCode = str_replace('<%%URLCOMBOTEXT(CBLap)%%>', urlencode($combo_CBLap->MatchText), $templateCode);

	/* lookup fields array: 'lookup field name' => ['parent table name', 'lookup field caption'] */
	$lookup_fields = ['LoaiCTV' => ['LoaiCTV', 'LoaiCTV'], 'DVSD' => ['DONVI', 'DVSD'], 'CBSD' => ['CanBo', 'CBSD'], 'DVLap' => ['DONVI', 'DVLap'], 'CBLap' => ['CanBo', 'CBLap'], ];
	foreach($lookup_fields as $luf => $ptfc) {
		$pt_perm = getTablePermissions($ptfc[0]);

		// process foreign key links
		if($pt_perm['view'] || $pt_perm['edit']) {
			$templateCode = str_replace("<%%PLINK({$luf})%%>", '<button type="button" class="btn btn-default view_parent" id="' . $ptfc[0] . '_view_parent" title="' . html_attr($Translation['View'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-eye-open"></i></button>', $templateCode);
		}

		// if user has insert permission to parent table of a lookup field, put an add new button
		if($pt_perm['insert'] /* && !Request::val('Embedded')*/) {
			$templateCode = str_replace("<%%ADDNEW({$ptfc[0]})%%>", '<button type="button" class="btn btn-default add_new_parent" id="' . $ptfc[0] . '_add_new" title="' . html_attr($Translation['Add New'] . ' ' . $ptfc[1]) . '"><i class="glyphicon glyphicon-plus text-success"></i></button>', $templateCode);
		}
	}

	// process images
	$templateCode = str_replace('<%%UPLOADFILE(IDCTV)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Sodangky)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Ngaydangky)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(LoaiCTV)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Bidanh)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(NgayPLgannhat)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(NgaydenhanPL)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(DVSD)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(CBSD)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(DVLap)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(CBLap)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Status)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Diaban)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Doituong)%%>', '', $templateCode);
	$templateCode = str_replace('<%%UPLOADFILE(Vitri)%%>', '', $templateCode);

	// process values
	if($selected_id) {
		if( $dvprint) $templateCode = str_replace('<%%VALUE(IDCTV)%%>', safe_html($urow['IDCTV']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(IDCTV)%%>', html_attr($row['IDCTV']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(IDCTV)%%>', urlencode($urow['IDCTV']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Sodangky)%%>', safe_html($urow['Sodangky']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Sodangky)%%>', html_attr($row['Sodangky']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Sodangky)%%>', urlencode($urow['Sodangky']), $templateCode);
		$templateCode = str_replace('<%%VALUE(Ngaydangky)%%>', app_datetime($row['Ngaydangky'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Ngaydangky)%%>', urlencode(app_datetime($urow['Ngaydangky'], 'dt')), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(LoaiCTV)%%>', safe_html($urow['LoaiCTV']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(LoaiCTV)%%>', html_attr($row['LoaiCTV']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(LoaiCTV)%%>', urlencode($urow['LoaiCTV']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Bidanh)%%>', safe_html($urow['Bidanh']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Bidanh)%%>', html_attr($row['Bidanh']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Bidanh)%%>', urlencode($urow['Bidanh']), $templateCode);
		$templateCode = str_replace('<%%VALUE(NgayPLgannhat)%%>', app_datetime($row['NgayPLgannhat'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(NgayPLgannhat)%%>', urlencode(app_datetime($urow['NgayPLgannhat'], 'dt')), $templateCode);
		$templateCode = str_replace('<%%VALUE(NgaydenhanPL)%%>', app_datetime($row['NgaydenhanPL'], 'dt'), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(NgaydenhanPL)%%>', urlencode(app_datetime($urow['NgaydenhanPL'], 'dt')), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(DVSD)%%>', safe_html($urow['DVSD']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(DVSD)%%>', html_attr($row['DVSD']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(DVSD)%%>', urlencode($urow['DVSD']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(CBSD)%%>', safe_html($urow['CBSD']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(CBSD)%%>', html_attr($row['CBSD']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(CBSD)%%>', urlencode($urow['CBSD']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(DVLap)%%>', safe_html($urow['DVLap']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(DVLap)%%>', html_attr($row['DVLap']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(DVLap)%%>', urlencode($urow['DVLap']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(CBLap)%%>', safe_html($urow['CBLap']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(CBLap)%%>', html_attr($row['CBLap']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(CBLap)%%>', urlencode($urow['CBLap']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Status)%%>', safe_html($urow['Status']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Status)%%>', html_attr($row['Status']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Status)%%>', urlencode($urow['Status']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Diaban)%%>', safe_html($urow['Diaban']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Diaban)%%>', html_attr($row['Diaban']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Diaban)%%>', urlencode($urow['Diaban']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Doituong)%%>', safe_html($urow['Doituong']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Doituong)%%>', html_attr($row['Doituong']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Doituong)%%>', urlencode($urow['Doituong']), $templateCode);
		if( $dvprint) $templateCode = str_replace('<%%VALUE(Vitri)%%>', safe_html($urow['Vitri']), $templateCode);
		if(!$dvprint) $templateCode = str_replace('<%%VALUE(Vitri)%%>', html_attr($row['Vitri']), $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Vitri)%%>', urlencode($urow['Vitri']), $templateCode);
	} else {
		$templateCode = str_replace('<%%VALUE(IDCTV)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(IDCTV)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Sodangky)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Sodangky)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Ngaydangky)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Ngaydangky)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(LoaiCTV)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(LoaiCTV)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Bidanh)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Bidanh)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(NgayPLgannhat)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(NgayPLgannhat)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(NgaydenhanPL)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(NgaydenhanPL)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(DVSD)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(DVSD)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(CBSD)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(CBSD)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(DVLap)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(DVLap)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(CBLap)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(CBLap)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Status)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Status)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Diaban)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Diaban)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Doituong)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Doituong)%%>', urlencode(''), $templateCode);
		$templateCode = str_replace('<%%VALUE(Vitri)%%>', '', $templateCode);
		$templateCode = str_replace('<%%URLVALUE(Vitri)%%>', urlencode(''), $templateCode);
	}

	// process translations
	$templateCode = parseTemplate($templateCode);

	// clear scrap
	$templateCode = str_replace('<%%', '<!-- ', $templateCode);
	$templateCode = str_replace('%%>', ' -->', $templateCode);

	// hide links to inaccessible tables
	if(Request::val('dvprint_x') == '') {
		$templateCode .= "\n\n<script>\$j(function() {\n";
		$arrTables = getTableList();
		foreach($arrTables as $name => $caption) {
			$templateCode .= "\t\$j('#{$name}_link').removeClass('hidden');\n";
			$templateCode .= "\t\$j('#xs_{$name}_link').removeClass('hidden');\n";
		}

		$templateCode .= $jsReadOnly;
		$templateCode .= $jsEditable;

		if(!$selected_id) {
		}

		$templateCode.="\n});</script>\n";
	}

	// ajaxed auto-fill fields
	$templateCode .= '<script>';
	$templateCode .= '$j(function() {';


	$templateCode.="});";
	$templateCode.="</script>";
	$templateCode .= $lookups;

	// handle enforced parent values for read-only lookup fields
	$filterField = Request::val('FilterField');
	$filterOperator = Request::val('FilterOperator');
	$filterValue = Request::val('FilterValue');

	// don't include blank images in lightbox gallery
	$templateCode = preg_replace('/blank.gif" data-lightbox=".*?"/', 'blank.gif"', $templateCode);

	// don't display empty email links
	$templateCode=preg_replace('/<a .*?href="mailto:".*?<\/a>/', '', $templateCode);

	/* default field values */
	$rdata = $jdata = get_defaults('CTV');
	if($selected_id) {
		$jdata = get_joined_record('CTV', $selected_id);
		if($jdata === false) $jdata = get_defaults('CTV');
		$rdata = $row;
	}
	$templateCode .= loadView('CTV-ajax-cache', ['rdata' => $rdata, 'jdata' => $jdata]);

	// hook: CTV_dv
	if(function_exists('CTV_dv')) {
		$args = [];
		CTV_dv(($selected_id ? $selected_id : FALSE), getMemberInfo(), $templateCode, $args);
	}

	return $templateCode;
}